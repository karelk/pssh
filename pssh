#!/bin/sh

port=
timeout="1"

################################################################################################################################################################
###   sanity checks   ##########################################################################################################################################
################################################################################################################################################################

 if [ -t 0 ] ; then
    printf "\n\033[1;31m Error:\033[0m Expecting input from a pipe\n\n" >&2
    exit 1
 fi

################################################################################################################################################################
###   functions   ##############################################################################################################################################
################################################################################################################################################################

 print_help() {
	printf '\n \e[1;31mecho \e[0;38;5;176m<HOSTNAME>\e[0m | \e[1;31mpssh \e[0;38;5;176m[--port=NUM] [--timeout=NUM] \e[0;38;5;76m"command"\e[0m\n\n' >&2
 }

################################################################################################################################################################
###   parse commandline arguments   ############################################################################################################################
################################################################################################################################################################

 while true ; do
    case "$1" in
	(--port)
	    printf '\n\e[1;31m Error: \e[0;38;5;176m--port\e[0m needs an integer argument in the form of \e[1;31m--port=NUM\e[0m\n\n' >&2
	    exit 2
	    ;;
	(--port=[0-9]*)
	    port="-p${1#*=}"
	    shift
	    ;;
	(--port=?*)
	    printf '\n\e[1;31m Error: \e[0;38;5;176m--port\e[0m needs an integer argument in the form of \e[1;31m--port=NUM\e[0m\n\n' >&2
	    exit 2
	    ;;
	(--port=)
	    printf '\n\e[1;31m Error: \e[0;38;5;176m--port\e[0m needs an integer argument in the form of \e[1;31m--port=NUM\e[0m\n\n' >&2
	    exit 2
	    ;;
	(--timeout)
	    printf '\n\e[1;31m Error: \e[0;38;5;176m--timeout\e[0m needs an integer argument in the form of \e[1;31m--timeout=NUM\e[0m\n\n' >&2
	    exit 2
	    ;;
	(--timeout=[0-9]*)
	    timeout=${1#*=}
	    shift
	    ;;
	(--timeout=?*)
	    printf '\n\e[1;31m Error: \e[0;38;5;176m--timeout\e[0m needs an integer argument in the form of \e[1;31m--timeout=NUM\e[0m\n\n' >&2
	    exit 2
	    ;;
	(--timeout=)
	    printf '\n\e[1;31m Error: \e[0;38;5;176m--timeout\e[0m needs an integer argument in the form of \e[1;31m--timeout=NUM\e[0m\n\n' >&2
	    exit 2
	    ;;
	(-?*)
	    printf "\n\e[1;31m Unknown option:\e[0m $1\n" >&2
	    print_help
	    exit 2
	    ;;
	("")
	    printf "\n\e[1;31m Error: \e[0mmissing command\n" >&2
	    print_help
	    exit 1
	    ;;
	(*)
	    break
	    ;;
    esac
 done

################################################################################################################################################################
###   main   ###################################################################################################################################################
################################################################################################################################################################

 for server in $(grep -v '^#' /dev/stdin) ; do
    echo
    for command in "$@" ; do

	output="$(ssh -n -l root $port -o ConnectTimeout=$timeout -o PubkeyAuthentication=yes -o LogLevel=ERROR $server $command 2>&1)"
	ret="$?"
	[ 2 -gt "$(echo "$output" | wc -l)" ] && N='' || N='\n'

	if [ "$ret" -eq 0 ] ; then
	    printf "\033[0;32m[\033[1;32mOK\033[0;32m]   \033[0;33m%s: \033[1;31m%s:\033[0m $N%s\n" "${server}" "${command}" "$output"
	else
	    printf "\033[0;31m[\033[1;31mFAIL\033[0;31m] \033[0;33m%s: \033[1;31m%s:\033[0m $N%s\n" "${server}" "${command}" "$output"
	fi

    done
 done
 echo

################################################################################################################################################################
################################################################################################################################################################
################################################################################################################################################################
